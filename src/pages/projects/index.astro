---
import "@/styles/global.css";

import { getCollection } from "astro:content";
import type { ImageMetadata } from "astro";
import type { MarkdownHeading } from "astro";

import MainLayout from "@/layouts/MainLayout.astro";
import ProjectCard from "@/components/ProjectCard.astro";
import Search from "@/components/Search";
import TableOfContents from "@/components/TableOfContents.astro";

import createSlug from "@/lib/createSlug";

const projects = (await getCollection("projects")).sort(
    (a, b) => b.data.startDate.valueOf() - a.data.startDate.valueOf(),
);

const images = import.meta.glob<{ default: ImageMetadata }>(
    "/src/content/projects/*/assets/thumbnail.png",
);

// Group projects by year
const projectsByYear = projects.reduce(
    (acc, project) => {
        const year = project.data.startDate.getFullYear();
        if (!acc[year]) {
            acc[year] = [];
        }
        acc[year].push(project);
        return acc;
    },
    {} as Record<number, typeof projects>,
);

// Create headings-like structure with year sections
const projectHeadings: MarkdownHeading[] = Object.entries(projectsByYear)
    .sort(([a], [b]) => Number(b) - Number(a)) // Sort years descending
    .flatMap(([year, yearProjects]) => [
        { depth: 1, slug: `year-${year}`, text: year.toString() },
        ...yearProjects.map((project) => ({
            depth: 2,
            slug: `project-${createSlug(project.data.title, project.data?.slug)}`,
            text: project.data.title,
        })),
    ]);
---

<MainLayout title="Projects" layout="DEFAULT">
    <Search slot="nav-sidebar" client:load />

    <div
        class="flex flex-wrap justify-center gap-8 overflow-visible px-8 py-4 md:px-16"
    >
        {
            Object.entries(projectsByYear)
                .sort(([a], [b]) => Number(b) - Number(a)) // Sort years descending
                .flatMap(([year, yearProjects]) => [
                    // Year heading as a full-width element
                    <div class="w-full text-center">
                        <h2
                            id={`year-${year}`}
                            class="mb-2 text-2xl font-bold text-neutral-900"
                        >
                            {year}
                        </h2>
                    </div>,
                    // Project cards for this year
                    ...yearProjects.map((project) => {
                        const finalizedSlug = createSlug(
                            project.data.title,
                            project.data?.slug,
                        );
                        const thumbnailPath = `/src/content/projects/${finalizedSlug}/assets/thumbnail.png`;
                        return (
                            <ProjectCard
                                project={project}
                                image={images[thumbnailPath]}
                                data-type={project.data.type}
                                data-category={project.data.category}
                            />
                        );
                    }),
                ])
        }
    </div>
    <TableOfContents slot="aside-sidebar" headings={projectHeadings} />
</MainLayout>
